name: C Compile, Run & Test (Windows - PowerShell)

on: [push, pull_request]

jobs:
  build-debug:
    runs-on: windows-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up MSVC (64-bit)
      - name: Set up MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      # Step 3: Compile all C files in C_BASICS folder (PowerShell)
      - name: Compile C files
        run: |
          Write-Host "Compiling all C files in C_BASICS folder..."
          if (!(Test-Path build)) { New-Item -ItemType Directory -Path build }
          Get-ChildItem -Path "C_BASICS" -Filter "*.c" | ForEach-Object {
            $fname = $_.BaseName
            Write-Host "Compiling $($_.Name)..."
            cl /Zi /W4 /Fe:("build\" + $fname + ".exe") $_.FullName
            if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }
          }
          Write-Host "Compilation finished."
          Get-ChildItem build

      # Step 4: Run all executables
      - name: Run executables
        run: |
          Write-Host "Running executables..."
          Get-ChildItem -Path "build" -Filter "*.exe" | ForEach-Object {
            $exe = $_.FullName
            $fname = $_.BaseName
            Write-Host "Running $($_.Name)..."
            & $exe > "build\$fname.output.txt"
            Get-Content "build\$fname.output.txt"
          }

      # Step 5: Automated Testing (optional)
      - name: Automated Testing
        run: |
          Write-Host "Checking outputs against expected results..."
          $errors = 0
          Get-ChildItem -Path "build" -Filter "*.output.txt" | ForEach-Object {
            $outputFile = $_.FullName
            $fname = $_.BaseName
            $expectedFile = "C_tests\$fname.expected.txt"
            if (Test-Path $expectedFile) {
              Write-Host "Comparing $outputFile with $expectedFile..."
              $diff = Compare-Object (Get-Content $outputFile) (Get-Content $expectedFile)
              if ($diff) {
                Write-Host "Mismatch found for $fname"
                $errors++
              }
            } else {
              Write-Host "No expected output for $fname, skipping test."
            }
          }
          if ($errors -ne 0) { exit 1 }
          Write-Host "All tests passed!"

      # Step 6: List debug symbols
      - name: Debug info
        run: |
          Write-Host "Debug symbols generated (PDB files):"
          Get-ChildItem build -Filter "*.pdb"
